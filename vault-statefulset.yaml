apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
spec:
  serviceName: "vault"
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      serviceAccountName: vault  # Ensure this service account exists
      initContainers:
      - name: init-config
        image: busybox
        command: ["sh", "-c", "cp /mnt/vault-config/vault-config.hcl /vault/config/"]
        volumeMounts:
        - name: vault-config-storage
          mountPath: /mnt/vault-config
        - name: vault-config
          mountPath: /vault/config
      containers:
      - name: vault
        image: hashicorp/vault:1.16.2
        ports:
        - containerPort: 8200
          name: vault
        volumeMounts:
        - name: vault-config
          mountPath: /vault/config
        - name: vault-storage
          mountPath: /vault/data
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_SKIP_CHOWN
          value: "true"
        args:
        - "server"
        - "-config=/vault/config/vault-config.hcl"
        securityContext:
          capabilities:
            add: ["IPC_LOCK"]
      - name: debug
        image: busybox
        command: ["sh", "-c", "sleep 3600"]
        volumeMounts:
        - name: vault-storage
          mountPath: /vault/data
      volumes:
      - name: vault-config
        emptyDir: {}
      - name: vault-config-storage
        persistentVolumeClaim:
          claimName: vault-config-pvc
      - name: vault-storage
        persistentVolumeClaim:
          claimName: vault-pvc
  volumeClaimTemplates:
  - metadata:
      name: vault-storage
      namespace: vault
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: "second-nfs-client"
      resources:
        requests:
          storage: 10Gi
